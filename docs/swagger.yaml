definitions:
  api.PostChangePasswordRequest:
    properties:
      password:
        type: string
      passwordConfirm:
        type: string
      token:
        type: string
    required:
    - password
    - passwordConfirm
    type: object
  api.TokenIntrospectRequest:
    properties:
      token:
        type: string
    type: object
  api.TokenIntrospectResponse:
    properties:
      active:
        type: boolean
    type: object
  api.TokenRequest:
    properties:
      scope:
        items:
          type: string
        type: array
      sub:
        type: string
    type: object
  api.TokenResponse:
    properties:
      token:
        type: string
    type: object
  api.UserInviteRequest:
    properties:
      accountId:
        type: integer
      email:
        type: string
      senderEmail:
        type: string
    type: object
  models.Active:
    properties:
      active:
        type: boolean
    required:
    - active
    type: object
  models.AutuhorityInfo:
    properties:
      createDate:
        type: string
      creator:
        type: string
      id:
        type: string
      method:
        type: string
      modifier:
        type: string
      modifyDate:
        type: string
      name:
        type: string
      realm:
        type: string
      url:
        type: string
      useYn:
        type: boolean
    required:
    - id
    - name
    type: object
  models.ClientSecret:
    properties:
      type:
        type: string
      value:
        type: string
    type: object
  models.CreateServiceAccount:
    properties:
      clientId:
        type: string
    type: object
  models.CreateUserInfo:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
      realm:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  models.CredentialRepresentation:
    properties:
      createdDate:
        type: integer
      credentialData:
        type: string
      id:
        type: string
      type:
        type: string
      userLabel:
        type: string
    required:
    - createdDate
    - credentialData
    - id
    - type
    type: object
  models.GetServiceAccount:
    properties:
      account:
        type: string
      accountId:
        type: string
      clientId:
        type: string
      createDate:
        type: string
      creator:
        type: string
      enabled:
        type: boolean
      id:
        type: string
      modifier:
        type: string
      modifyDate:
        type: string
      realmId:
        type: string
      roles:
        type: string
      secret:
        type: string
    type: object
  models.GetUserInfo:
    properties:
      Account:
        type: string
      AccountId:
        type: string
      OpenId:
        type: string
      attributes:
        additionalProperties:
          items:
            type: string
          type: array
        type: object
      createDate:
        type: string
      createdTimestamp:
        type: integer
      creator:
        type: string
      email:
        type: string
      enabled:
        type: boolean
      firstName:
        type: string
      groups:
        type: string
      id:
        type: string
      lastName:
        type: string
      modifier:
        type: string
      modifyDate:
        type: string
      phoneNumber:
        type: string
      realm:
        type: string
      requiredActions:
        items:
          type: string
        type: array
      roles:
        type: string
      username:
        type: string
    type: object
  models.GroupData:
    properties:
      id:
        type: string
      name:
        type: string
      path:
        type: string
    required:
    - id
    - name
    - path
    type: object
  models.GroupInfo:
    properties:
      name:
        type: string
      realm:
        type: string
    required:
    - name
    type: object
  models.GroupItem:
    properties:
      countMembers:
        type: integer
      createDate:
        type: string
      creator:
        type: string
      id:
        type: string
      modifier:
        type: string
      modifyDate:
        type: string
      name:
        type: string
      realm:
        type: string
    required:
    - countMembers
    - id
    - name
    - realm
    type: object
  models.Id:
    properties:
      id:
        type: string
    required:
    - id
    type: object
  models.IdItem:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  models.MenuAutuhorityInfo:
    properties:
      method:
        type: string
      name:
        type: string
      url:
        type: string
    required:
    - method
    - name
    - url
    type: object
  models.MetricAppItem:
    properties:
      client1:
        type: integer
      client2:
        type: integer
      date:
        type: string
    type: object
  models.MetricCount:
    properties:
      applications:
        type: integer
      authorities:
        type: integer
      groups:
        type: integer
      roles:
        type: integer
      users:
        type: integer
    required:
    - applications
    - authorities
    - groups
    - roles
    - users
    type: object
  models.MetricItem:
    properties:
      key:
        type: string
      realm:
        type: string
      valse:
        type: integer
    type: object
  models.ResetUserPasswordInfo:
    properties:
      password:
        type: string
      passwordConfirm:
        type: string
      temporary:
        type: boolean
    required:
    - password
    - passwordConfirm
    type: object
  models.RolesInfo:
    properties:
      authId:
        items:
          type: string
        type: array
      createDate:
        type: string
      creator:
        type: string
      defaultRole:
        type: boolean
      id:
        type: string
      modifier:
        type: string
      modifyDate:
        type: string
      name:
        type: string
      realm:
        type: string
      tenantId:
        type: string
      useYn:
        type: boolean
    required:
    - id
    - name
    type: object
  models.SecretData:
    properties:
      createDate:
        type: string
      creator:
        type: string
      modifier:
        type: string
      modifyDate:
        type: string
      url:
        type: string
    required:
    - createDate
    - creator
    - modifier
    - modifyDate
    - url
    type: object
  models.SecretGroupInput:
    properties:
      description:
        type: string
      name:
        type: string
      roleId:
        items:
          type: string
        type: array
      userId:
        items:
          type: string
        type: array
    required:
    - description
    - name
    type: object
  models.SecretGroupItem:
    properties:
      createDate:
        type: string
      creator:
        type: string
      description:
        type: string
      modifier:
        type: string
      modifyDate:
        type: string
      name:
        type: string
      roleId:
        items:
          type: string
        type: array
      secrets:
        items:
          $ref: '#/definitions/models.SecretItem'
        type: array
      userId:
        items:
          type: string
        type: array
    required:
    - description
    - name
    type: object
  models.SecretGroupResponse:
    properties:
      createDate:
        type: string
      creator:
        type: string
      description:
        type: string
      modifier:
        type: string
      modifyDate:
        type: string
      roles:
        items:
          $ref: '#/definitions/models.IdItem'
        type: array
      users:
        items:
          $ref: '#/definitions/models.IdItem'
        type: array
    required:
    - description
    - roles
    - users
    type: object
  models.SecretGroupUpdate:
    properties:
      description:
        type: string
      roleId:
        items:
          type: string
        type: array
      userId:
        items:
          type: string
        type: array
    required:
    - description
    type: object
  models.SecretInput:
    properties:
      data:
        properties:
          foo:
            type: string
          test:
            type: string
        required:
        - foo
        - test
        type: object
      url:
        type: string
    required:
    - data
    - url
    type: object
  models.SecretItem:
    properties:
      createDate:
        type: string
      creator:
        type: string
      modifier:
        type: string
      modifyDate:
        type: string
      name:
        type: string
      url:
        type: string
    required:
    - name
    - url
    type: object
  models.SecretMetadata:
    properties:
      created_time:
        type: string
      current_version:
        type: string
      max_versions:
        type: string
      oldest_version:
        type: string
      updated_time:
        type: string
      versions:
        properties:
          versversion_numberions:
            properties:
              created_time:
                type: string
              deletion_time:
                type: string
              destroyed:
                type: boolean
            required:
            - created_time
            - deletion_time
            - destroyed
            type: object
        required:
        - versversion_numberions
        type: object
    required:
    - created_time
    - current_version
    - max_versions
    - oldest_version
    - updated_time
    - versions
    type: object
  models.SecretVersion:
    properties:
      versions:
        items:
          type: string
        type: array
    required:
    - versions
    type: object
  models.SesstionData:
    properties:
      clients:
        items:
          properties:
            ClientId_Text:
              type: string
          required:
          - ClientId_Text
          type: object
        type: array
      id:
        type: string
      ipAddress:
        type: string
      lastAccess:
        type: integer
      start:
        type: integer
      userId:
        type: string
      username:
        type: string
    required:
    - clients
    - id
    - ipAddress
    - lastAccess
    - start
    - userId
    - username
    type: object
  models.UpdateServiceAccount:
    properties:
      enabled:
        type: boolean
    type: object
  models.UpdateUserInfo:
    properties:
      attributes:
        additionalProperties:
          items:
            type: string
          type: array
        type: object
      email:
        type: string
      enabled:
        type: boolean
      firstName:
        type: string
      lastName:
        type: string
      phoneNumber:
        type: string
      requiredActions:
        items:
          type: string
        type: array
      username:
        type: string
    type: object
  models.UserIdProviderData:
    properties:
      identityProvider:
        type: string
      userId:
        type: string
      userName:
        type: string
    required:
    - identityProvider
    - userId
    - userName
    type: object
  models.UserRoles:
    properties:
      roleId:
        type: string
      roleName:
        type: string
    required:
    - roleId
    - roleName
    type: object
  models.UserRolesList:
    properties:
      roles:
        items:
          $ref: '#/definitions/models.UserRoles'
        type: array
      userId:
        type: string
    required:
    - roles
    - userId
    type: object
  models.UsersRolesRequest:
    properties:
      userId:
        items:
          type: string
        type: array
    required:
    - userId
    type: object
info:
  contact: {}
  title: IAM.Backend API Document
  version: v1.1.3.RC2
paths:
  /authority/{tenantId}/group/{groupId}/roles/{roleId}:
    delete:
      parameters:
      - description: Realm Id
        in: path
        name: realm
        required: true
        type: string
      - description: tenantId
        in: query
        name: tenantId
        required: true
        type: string
      - description: Group Id
        in: path
        name: groupId
        required: true
        type: string
      - description: Role Id
        in: path
        name: roleId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 그룹 역할 제외
      tags:
      - Authority
  /authority/auth:
    get:
      parameters:
      - description: Realm Id
        in: path
        name: realm
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.AutuhorityInfo'
            type: array
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 전체 권한 목록 조회
      tags:
      - Authority
    post:
      parameters:
      - description: Realm Id
        in: path
        name: realm
        required: true
        type: string
      - description: body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.AutuhorityInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Id'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 권한 생성
      tags:
      - Authority
  /authority/auth/{authId}:
    delete:
      parameters:
      - description: Realm Id
        in: path
        name: realm
        required: true
        type: string
      - description: Auth Name
        in: path
        name: authId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Id'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 권한 삭제
      tags:
      - Authority
    get:
      parameters:
      - description: Auth Id
        in: path
        name: authId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AutuhorityInfo'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 권한 정보 조회
      tags:
      - Authority
    put:
      parameters:
      - description: Realm Id
        in: path
        name: realm
        required: true
        type: string
      - description: Auth Name
        in: path
        name: authId
        required: true
        type: string
      - description: body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.AutuhorityInfo'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 권한 수정
      tags:
      - Authority
  /authority/auth/menu/{site}:
    get:
      parameters:
      - description: Site
        in: path
        name: site
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.MenuAutuhorityInfo'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 메뉴 권한 조회
      tags:
      - Authority
  /authority/group/{groupId}/roles:
    post:
      parameters:
      - description: tenantId
        in: query
        name: tenantId
        required: true
        type: string
      - description: Group Id
        in: path
        name: groupId
        required: true
        type: string
      - description: Role Id
        in: body
        name: roleId
        required: true
        schema:
          $ref: '#/definitions/models.Id'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 그룹 역할 할당
      tags:
      - Authority
  /authority/roles:
    get:
      parameters:
      - description: 사용되지 않음
        in: path
        name: realm
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.RolesInfo'
            type: array
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 전체 역할 목록 조회
      tags:
      - Authority
    post:
      parameters:
      - description: body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.RolesInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Id'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 역할 생성
      tags:
      - Authority
  /authority/roles/{roleId}:
    delete:
      parameters:
      - description: Role Id
        in: path
        name: roleId
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 역할 삭제
      tags:
      - Authority
    put:
      parameters:
      - description: Role Id
        in: path
        name: roleId
        required: true
        type: string
      - description: body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.RolesInfo'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 역할 수정
      tags:
      - Authority
  /authority/roles/{roleId}/auth:
    get:
      parameters:
      - description: Role Id
        in: path
        name: roleId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.RolesInfo'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 역할 할당 권한 목록 조회
      tags:
      - Authority
    post:
      parameters:
      - description: Role Id
        in: path
        name: roleId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 역할 권한 할당
      tags:
      - Authority
  /authority/roles/{roleId}/auth/{authId}:
    delete:
      parameters:
      - description: Role Id
        in: path
        name: roleId
        required: true
        type: string
      - description: Auth Id
        in: path
        name: authId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 역할 권한 제외
      tags:
      - Authority
    put:
      parameters:
      - description: Role Id
        in: path
        name: roleId
        required: true
        type: string
      - description: Auth Id
        in: path
        name: authId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 역할 권한 수정
      tags:
      - Authority
  /authority/user/{userId}:
    get:
      parameters:
      - description: Realm Id
        in: path
        name: realm
        required: true
        type: string
      - description: User Id
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.RolesInfo'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 유저 할당 역할 목록 조회
      tags:
      - Authority
  /authority/user/{userId}/auth:
    get:
      parameters:
      - description: Realm Id
        in: path
        name: realm
        required: true
        type: string
      - description: User Id
        in: path
        name: userId
        required: true
        type: string
      - description: tenantId
        in: query
        name: tenantId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.AutuhorityInfo'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 유저 활성 권한 목록 조회
      tags:
      - Authority
  /authority/user/{userId}/roles:
    post:
      parameters:
      - description: tenantId
        in: query
        name: tenantId
        required: true
        type: string
      - description: User Id
        in: path
        name: userId
        required: true
        type: string
      - description: Role Id
        in: body
        name: roleId
        required: true
        schema:
          $ref: '#/definitions/models.Id'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 유저 역할 할당
      tags:
      - Authority
  /authority/user/{userId}/roles/{roleId}:
    delete:
      parameters:
      - description: Realm Id
        in: path
        name: realm
        required: true
        type: string
      - description: tenantId
        in: query
        name: tenantId
        required: true
        type: string
      - description: User Id
        in: path
        name: userId
        required: true
        type: string
      - description: Role Id
        in: path
        name: roleId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 유저 역할 제외
      tags:
      - Authority
  /authority/user/{userName}/auth/{authName}:
    get:
      parameters:
      - description: Realm Id
        in: path
        name: realm
        required: true
        type: string
      - description: User Name
        in: path
        name: userName
        required: true
        type: string
      - description: Auth Name
        in: path
        name: authName
        required: true
        type: string
      - description: tenantId
        in: query
        name: tenantId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Active'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 유저 권한 보유 여부 질의
      tags:
      - Authority
  /authority/user/auth:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 유저 권한 조회
      tags:
      - Authority
  /authority/users/roles:
    post:
      parameters:
      - description: User Ids
        in: body
        name: userId
        required: true
        schema:
          $ref: '#/definitions/models.UsersRolesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.UserRolesList'
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 여러 유저 할당 역할 목록 조회
      tags:
      - Authority
  /groups:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.GroupItem'
            type: array
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 그룹 목록
      tags:
      - Groups
    post:
      parameters:
      - description: body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.GroupInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Id'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 그룹 생성
      tags:
      - Groups
  /groups/{groupId}:
    delete:
      parameters:
      - description: Realm Id
        in: path
        name: realm
        required: true
        type: string
      - description: Group Id
        in: path
        name: groupId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 그룹 삭제
      tags:
      - Groups
    put:
      parameters:
      - description: Realm Id
        in: path
        name: realm
        required: true
        type: string
      - description: body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.GroupInfo'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 그룹 정보 변경
      tags:
      - Groups
  /metric/count:
    get:
      parameters:
      - description: realm
        in: query
        name: realm
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MetricCount'
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 리소스 수 조회
      tags:
      - Metric
  /metric/idp/count:
    get:
      parameters:
      - description: realm
        in: query
        name: realm
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.MetricItem'
            type: array
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: ID 제공자 수 조회
      tags:
      - Metric
  /metric/login/application:
    get:
      parameters:
      - description: realm
        in: query
        name: realm
        required: true
        type: string
      - description: Date count
        in: query
        name: date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.MetricItem'
            type: array
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 어플리케이션 별 유저 접속 수 조회
      tags:
      - Metric
  /metric/login/application/date:
    get:
      parameters:
      - description: realm
        in: query
        name: realm
        required: true
        type: string
      - description: Date count
        in: query
        name: date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.MetricAppItem'
            type: array
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 일자 별 유저 접속 수 조회
      tags:
      - Metric
  /metric/login/application/log:
    get:
      parameters:
      - description: realm
        in: query
        name: realm
        required: true
        type: string
      - description: Date
        in: query
        name: date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.MetricAppItem'
            type: array
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 유저 접속 로그 출력
      tags:
      - Metric
  /metric/login/error:
    get:
      parameters:
      - description: realm
        in: query
        name: realm
        required: true
        type: string
      - description: Date count
        in: query
        name: date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.MetricItem'
            type: array
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 유형 별 로그인 실패 수 조회
      tags:
      - Metric
  /metric/session:
    get:
      parameters:
      - description: realm
        in: query
        name: realm
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.MetricItem'
            type: array
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 어플리케이션 별 현재 세션 수 조회
      tags:
      - Metric
  /secret:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SecretGroupItem'
            type: array
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 비밀 그룹 목록 조회
      tags:
      - Secret
    post:
      parameters:
      - description: body
        in: body
        name: Body
        required: true
        schema:
          items:
            $ref: '#/definitions/models.SecretGroupInput'
          type: array
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 비밀 그룹 생성
      tags:
      - Secret
  /secret/{SecretGroupName}:
    delete:
      parameters:
      - description: Secret Group Name
        in: path
        name: secretGroupName
        required: true
        type: string
      - description: body
        in: body
        name: Body
        required: true
        schema:
          items:
            $ref: '#/definitions/models.SecretGroupInput'
          type: array
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 비밀 그룹 삭제
      tags:
      - Secret
    get:
      parameters:
      - description: Secret Group Name
        in: path
        name: secretGroupName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SecretItem'
            type: array
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 비밀 목록 조회
      tags:
      - Secret
    put:
      parameters:
      - description: Secret Group Name
        in: path
        name: secretGroupName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SecretGroupUpdate'
            type: array
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 비밀 그룹 수정
      tags:
      - Secret
  /secret/{SecretGroupName}/data:
    get:
      parameters:
      - description: Secret Group Name
        in: path
        name: secretGroupName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SecretGroupResponse'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 비밀 그룹 상세 정보 조회
      tags:
      - Secret
  /secret/{SecretGroupName}/data/{Secretname}:
    get:
      parameters:
      - description: Secret Group Name
        in: path
        name: secretGroupName
        required: true
        type: string
      - description: Secret Name
        in: path
        name: secretName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SecretData'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 비밀 내용 조회
      tags:
      - Secret
    post:
      parameters:
      - description: Secret Group Name
        in: path
        name: secretGroupName
        required: true
        type: string
      - description: Secret Name
        in: path
        name: secretName
        required: true
        type: string
      - description: body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.SecretInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 비밀 생성 / 수정
      tags:
      - Secret
  /secret/{SecretGroupName}/delete/{Secretname}:
    post:
      parameters:
      - description: Secret Group Name
        in: path
        name: secretGroupName
        required: true
        type: string
      - description: Secret Name
        in: path
        name: secretName
        required: true
        type: string
      - description: body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.SecretVersion'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 비밀특정버전삭제(복구가능)
      tags:
      - Secret
  /secret/{SecretGroupName}/destroy/{Secretname}:
    post:
      parameters:
      - description: Secret Group Name
        in: path
        name: secretGroupName
        required: true
        type: string
      - description: Secret Name
        in: path
        name: secretName
        required: true
        type: string
      - description: body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.SecretVersion'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 비밀특정버전삭제(복구불가)
      tags:
      - Secret
  /secret/{SecretGroupName}/metadata/{Secretname}:
    delete:
      parameters:
      - description: Secret Group Name
        in: path
        name: secretGroupName
        required: true
        type: string
      - description: Secret Name
        in: path
        name: secretName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 비밀 삭제
      tags:
      - Secret
    get:
      parameters:
      - description: Secret Group Name
        in: path
        name: secretGroupName
        required: true
        type: string
      - description: Secret Name
        in: path
        name: secretName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SecretMetadata'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 비밀 상세 정보 조회
      tags:
      - Secret
  /secret/{SecretGroupName}/undelete/{Secretname}:
    post:
      parameters:
      - description: Secret Group Name
        in: path
        name: secretGroupName
        required: true
        type: string
      - description: Secret Name
        in: path
        name: secretName
        required: true
        type: string
      - description: body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.SecretVersion'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 비밀 복구
      tags:
      - Secret
  /serviceAccount:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.GetServiceAccount'
            type: array
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 서비스 어카운트 계정 조회
      tags:
      - ServiceAccount
    post:
      parameters:
      - description: body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.CreateServiceAccount'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 서비스 어카운트 생성
      tags:
      - ServiceAccount
  /serviceAccount/{userId}:
    delete:
      parameters:
      - description: User Id
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 서비스 어카운트 제거
      tags:
      - ServiceAccount
    get:
      parameters:
      - description: User Id
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetServiceAccount'
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 서비스 어카운트 계정 상세 정보 조회
      tags:
      - ServiceAccount
    put:
      parameters:
      - description: body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.UpdateServiceAccount'
      - description: User Id
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 서비스 어카운트 정보 변경
      tags:
      - ServiceAccount
  /serviceAccount/{userId}/secret/regenerate:
    post:
      parameters:
      - description: User Id
        in: path
        name: userId
        required: true
        type: string
      - description: realm ID
        in: query
        name: realm
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ClientSecret'
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 서비스 어카운트 시크릿 재생성
      tags:
      - ServiceAccount
  /token:
    post:
      parameters:
      - description: body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/api.TokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.TokenResponse'
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Token 토큰 발급
      tags:
      - Token
  /token/consume:
    post:
      parameters:
      - description: body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/api.TokenIntrospectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Token 토큰 만료 요청
      tags:
      - Token
  /token/introspect:
    post:
      parameters:
      - description: body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/api.TokenIntrospectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.TokenIntrospectResponse'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Token 토큰 검증
      tags:
      - Token
  /user-initialize:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: User 기본 정보 추가
      tags:
      - User
  /user-invite:
    post:
      parameters:
      - description: body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/api.UserInviteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 유저 초대
      tags:
      - User
  /user/{userID}/forgot-password:
    post:
      parameters:
      - description: User Id
        in: path
        name: userID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 유저 패스워드 변경 요청
      tags:
      - User
  /user/change-password:
    post:
      parameters:
      - description: PostChangePasswordRequest
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/api.PostChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 유저 패스워드 변경
      tags:
      - User
  /users:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.GetUserInfo'
            type: array
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 유저 목록
      tags:
      - Users
    post:
      parameters:
      - description: body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Id'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 유저 생성
      tags:
      - Users
  /users/{userId}:
    delete:
      parameters:
      - description: User Id
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 유저 삭제
      tags:
      - Users
    get:
      parameters:
      - description: User Id
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetUserInfo'
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 유저 상세정보 조회
      tags:
      - Users
    put:
      parameters:
      - description: User Id
        in: path
        name: userId
        required: true
        type: string
      - description: body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserInfo'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 유저 정보 변경
      tags:
      - Users
  /users/{userId}/credentials:
    get:
      parameters:
      - description: User Id
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CredentialRepresentation'
            type: array
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 유저 자격증명 조회
      tags:
      - Users
  /users/{userId}/federated-identity:
    get:
      parameters:
      - description: User Id
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserIdProviderData'
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 유저 ID 제공자 조회
      tags:
      - Users
  /users/{userId}/federated-identity/{providerId}:
    delete:
      parameters:
      - description: User Id
        in: path
        name: userId
        required: true
        type: string
      - description: Provider Id
        in: path
        name: providerId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 유저 ID 제공자 제거
      tags:
      - Users
  /users/{userId}/groups:
    delete:
      parameters:
      - description: User Id
        in: path
        name: userId
        required: true
        type: string
      - description: Group Id
        in: path
        name: groupId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 유저 그룹 탈퇴
      tags:
      - Users
    get:
      parameters:
      - description: User Id
        in: path
        name: userId
        required: true
        type: string
      - description: data start count
        in: query
        name: first
        required: true
        type: integer
      - description: data max count
        in: query
        name: max
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.GroupData'
            type: array
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 유저 그룹 조회
      tags:
      - Users
    put:
      parameters:
      - description: User Id
        in: path
        name: userId
        required: true
        type: string
      - description: Group Id
        in: path
        name: groupId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 유저 그룹 가입
      tags:
      - Users
  /users/{userId}/logout:
    post:
      parameters:
      - description: User Id
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 유저 전체 세션 제거
      tags:
      - Users
  /users/{userId}/reset-password:
    put:
      parameters:
      - description: User Id
        in: path
        name: userId
        required: true
        type: string
      - description: ResetUserPasswordInfo
        in: body
        name: roleId
        required: true
        schema:
          $ref: '#/definitions/models.ResetUserPasswordInfo'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 유저 비밀번호 변경
      tags:
      - Users
  /users/{userId}/sessions:
    get:
      parameters:
      - description: User Id
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SesstionData'
            type: array
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 유저 세션 조회
      tags:
      - Users
  /users/{userId}/sessions/{sessionId}:
    delete:
      parameters:
      - description: User Id
        in: path
        name: userId
        required: true
        type: string
      - description: Session Id
        in: path
        name: sessionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SesstionData'
            type: array
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 유저 세션 제거
      tags:
      - Users
  /users/initialize:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: integer
            type: array
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: Users 유저 초기 설정 작업(대상이 자기 자신인 경우에만)
      tags:
      - Users
  /users/me:
    post:
      parameters:
      - description: body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUserInfo'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: 자신의 계정 정보 변경
      tags:
      - Users
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
